/* 
 * Smarkets HTTP API
 *
 * This is the HTTP trading API for Smarkets. It can be used to trade on our exchange.     <br><br>For authenticated requests:<br>     <ul>     <li>Get a session token using the login route:     <a class=\"nostyle\" href=\"#/sessions/create_session\"><span>GET /v3/sessions/</span></a></li>     <li>Click on 'Authorize ðŸ”“', enter your token after 'Session-Token ' and click on the 'Authorize' button</li>     </ul>     <p>In order to place bets and get the latest prices without restrictions     using this API, you need to be a Smarkets API user.<br></p>     <p>To become one, please fill <a href=\"https://docs.google.com/forms/d/1qI8RqypNimakPx- bmoUE_lA0YSP3YogKfL8N14STNSM/viewform?edit_requested=true\">this form</a>.</p>     <p>For questions and feedback about the API, use <a href=\"https://community.smarkets.com/c/developers\">our forum</a>.</p>     <p>The API is not public, but we are granting users access on an ongoing basis.</p>     <p>You can find some sample code to help you bootstrap your integration <a href=\"https://github.com/ smarkets/smk_trading_bot\">here</a>.</p>     
 *
 * OpenAPI spec version: 3
 * Contact: api@smarkets.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Body6
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class Body6Tests
    {
        // TODO uncomment below to declare an instance variable for Body6
        //private Body6 instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Body6
            //instance = new Body6();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Body6
        /// </summary>
        [Test]
        public void Body6InstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Body6
            //Assert.IsInstanceOfType<Body6> (instance, "variable 'instance' is a Body6");
        }


        /// <summary>
        /// Test the property 'ColourBlind'
        /// </summary>
        [Test]
        public void ColourBlindTest()
        {
            // TODO unit test for the property 'ColourBlind'
        }
        /// <summary>
        /// Test the property 'ColourTheme'
        /// </summary>
        [Test]
        public void ColourThemeTest()
        {
            // TODO unit test for the property 'ColourTheme'
        }
        /// <summary>
        /// Test the property 'InstantBet'
        /// </summary>
        [Test]
        public void InstantBetTest()
        {
            // TODO unit test for the property 'InstantBet'
        }
        /// <summary>
        /// Test the property 'Locale'
        /// </summary>
        [Test]
        public void LocaleTest()
        {
            // TODO unit test for the property 'Locale'
        }
        /// <summary>
        /// Test the property 'MailingList'
        /// </summary>
        [Test]
        public void MailingListTest()
        {
            // TODO unit test for the property 'MailingList'
        }
        /// <summary>
        /// Test the property 'OddsFormat'
        /// </summary>
        [Test]
        public void OddsFormatTest()
        {
            // TODO unit test for the property 'OddsFormat'
        }
        /// <summary>
        /// Test the property 'SettlementNotification'
        /// </summary>
        [Test]
        public void SettlementNotificationTest()
        {
            // TODO unit test for the property 'SettlementNotification'
        }
        /// <summary>
        /// Test the property 'ShowBackerStake'
        /// </summary>
        [Test]
        public void ShowBackerStakeTest()
        {
            // TODO unit test for the property 'ShowBackerStake'
        }

    }

}
